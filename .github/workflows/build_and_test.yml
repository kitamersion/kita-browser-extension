name: Build and Test
on:
  push:
  pull_request_target:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install dependencies
        run: npm install

      - name: Test coverage
        id: test-coverage
        run: |
          npm test -- --coverage --coverageDirectory=./coverage

      - name: Extract coverage report
        id: extract-coverage
        run: |
          COVERAGE=$(cat ./coverage/lcov.info)
          echo "::set-output name=coverage::$COVERAGE"


      - name: Add comment to PR
        uses: actions/github-script@v5
        with:
          script: |
            const issue_number = context.issue.number;
            const body = `Code coverage is ${{ steps.extract-coverage.outputs.coverage }}`;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: body
            });